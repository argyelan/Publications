* DONE FOR PUBLICATION VOLUME ONLY IPER-SGA paper
** Figures-Clinical

#+BEGIN_SRC R

  ######IPER
      library(ggplot2)
  #  hamd<-read.csv('/nethome/amiklos/argyelan@gmail.com/howto/GitHub/Publications/VOLUMEvsCognition/Data/hamd.csv')
    hamd<-read.csv('./Data/hamd.csv')
    

    pdf('./Figures/HAM-D-change_n15.pdf')
    ggplot(hamd,aes(x=time,y=hamd))+
          geom_boxplot(aes(x=factor(time),fill='brown'))+
          geom_point()+
          geom_line(aes(group=id))
    dev.off()

    library(lme4)
      hlm1 <- lmer(hamd ~ time + (1 + time|id), data=hamd, REML=TRUE)
      hlm2 <- lmer(hamd ~ (time|id), data=hamd,REML=TRUE)
      anova(hlm1, hlm2)

      
      slopes <- cbind(rownames(ranef(hlm1)$id),ranef(hlm1)$id[, 2],ranef(hlm2)$id[, 2])
      colnames(slopes)<-c('id','method1','method2')
      slopes
      cr<-data.frame(slopes[,1],as.numeric(slopes[,2]))
      colnames(cr)<-c('id','cr')                                        # Extract random slopes

    cr
    resp<-matrix(0,dim(cr)[1],1)
    resp[which(cr$cr<=median(cr$cr)),1]<-1#responders
    cr$resp<-resp

    iper.hamd.df<-merge(hamd,cr, by = 'id')
    #write.csv(iper.hamd.df,'/nethome/amiklos/argyelan@gmail.com/howto/GitHub/Publications/VOLUMEvsCognition/Data/hamd_cr.csv') 
      t.test(hamd$hamd[which(hamd$time==1)],hamd$hamd[which(hamd$time==12)])
      mean(hamd$hamd[which(hamd$time==1)])
      sd(hamd$hamd[which(hamd$time==1)])
      mean(hamd$hamd[which(hamd$time==12)])
      sd(hamd$hamd[which(hamd$time==12)])

      mean(hamd$age[which(hamd$time==1)])
      sd(hamd$age[which(hamd$time==1)])

      # Num of Females
      length(which(hamd$sex[which(hamd$time==1)]=="Female"))

  #### SGA
   # bprs<-read.csv('/nethome/amiklos/argyelan@gmail.com/howto/GitHub/Publications/VOLUMEvsCognition/Data/bprs.csv')
      bprs<-read.csv('./Data/bprs.csv')

      
      hlm1 <- lmer(Total_1_18 ~ EXAMTYPE + (1+EXAMTYPE|GRID), data=bprs, REML=TRUE)
      hlm2 <- lmer(Total_1_18 ~ (EXAMTYPE|GRID), data=bprs,REML=TRUE)
      anova(hlm1, hlm2)

        
        slopes <- cbind(rownames(ranef(hlm1)$GRID),ranef(hlm1)$GRID[, 2],ranef(hlm2)$GRID[, 2])
        colnames(slopes)<-c('grid','method1','method2')
        slopes
        ps.cr<-data.frame(slopes[,1],as.numeric(slopes[,2]))
        colnames(ps.cr)<-c('grid','cr')                                        # Extract random slopes

      ps.cr
      resp<-matrix(0,dim(ps.cr)[1],1)
      resp[which(ps.cr$cr<=median(ps.cr$cr)),1]<-1#responders
      ps.cr$resp<-resp
      bprs.a<-merge(bprs,ps.cr,by.x='GRID',by.y='grid')

      #write.csv(bprs.a,'/nethome/amiklos/argyelan@gmail.com/howto/GitHub/Publications/VOLUMEvsCognition/Data/bprs_cr.csv') 
      unique(bprs.a$GRID)
      library(ggplot2)
       pdf('./Figures/BPRS-change_n14.pdf')
      ggplot(bprs.a,aes(x=factor(EXAMTYPE), y=Total_1_18))+
          geom_boxplot(fill='tan3')+
          geom_point()+
          geom_line(aes(group=ID),color='gray')
    dev.off()

    
    mean(bprs$age[which(bprs$EXAMTYPE==0)])
    sd(bprs$age[which(bprs$EXAMTYPE==0)])
    sex<-bprs$sex[which(bprs$EXAMTYPE==0)]
    length(which(sex==2))

    t.test(bprs$Total_1_18[which(bprs$EXAMTYPE==0)],bprs$Total_1_18[which(bprs$EXAMTYPE==8)])

    mean(bprs$Total_1_18[which(bprs$EXAMTYPE==0)])
    sd(bprs$Total_1_18[which(bprs$EXAMTYPE==0)])

    mean(bprs$Total_1_18[which(bprs$EXAMTYPE==8)],na.rm=T)
    sd(bprs$Total_1_18[which(bprs$EXAMTYPE==8)],na.rm=T)
#+END_SRC
** Figures-Cognitive
#+BEGIN_SRC R

  IPER.COG<-read.csv('./Data/IPER.COG.csv')


  for (i in 1:6)
      {
          IPER.COG[,i+3]<-round(qnorm(pnorm(IPER.COG[,i+3], mean=100, sd=15), mean=50,sd=10))
      }
  library(ggplot2)
  ggplot(IPER.COG, aes(x=factor(time),y=total))+
      geom_boxplot()+
      geom_point()+
      geom_line(aes(group=id))

  #SGA
  #SGA.COG<-read.csv('/nethome/amiklos/argyelan@gmail.com/howto/GitHub/Publications/VOLUMEvsCognition/Data/SGA.COG.csv')

  SGA.COG<-read.csv('./Data/SGA.COG.csv')


  ggplot(SGA.COG, aes(x=factor(time),y=Overall_TScore.0))+
      geom_boxplot()+
      geom_point()+
      geom_line(aes(group=grid))

  iper.t <- data.frame(IPER.COG$id, IPER.COG$time, IPER.COG$total)
  colnames(iper.t)<-c('id','time','cog')
  iper.t$group<-1
  iper.t$time[which(iper.t$time==1)]<-0
  iper.t$time[which(iper.t$time==5)]<-2
  iper.t$time[which(iper.t$time==12)]<-5


  sga.t <- data.frame(SGA.COG$grid, SGA.COG$time, SGA.COG$Overall_TScore.0)
  colnames(sga.t) <- c('id','time','cog')
  sga.t$group<-2
  sga.t$time[which(sga.t$time==1)]<-0
  sga.t$time[which(sga.t$time==2)]<-8

  #transform Tscore to Standard Score
  #sga.t$cog<-round(qnorm(pnorm(sga.t$cog, mean=50, sd=10), mean=100,sd=15))
  cogdf<-rbind(iper.t,sga.t)


  cogdf<-rbind(cogdf,c(NA,1,NA,1))
  cogdf<-rbind(cogdf,c(NA,3,NA,1))
  cogdf<-rbind(cogdf,c(NA,4,NA,1))
  cogdf<-rbind(cogdf,c(NA,6,NA,2))
  cogdf<-rbind(cogdf,c(NA,7,NA,2))


  pdf('./Figures/Cognitive_RBANS_MATRICS_BF.pdf')


  ggplot(cogdf, aes(x=factor(time), y=cog))+
      scale_fill_manual("Cognitive Battery",values=c("brown","tan4"), labels=c('RBANS','MATRICS'))+
      geom_boxplot(aes(fill=factor(group)))+
      #geom_boxplot()+
      geom_point()+
      geom_line(aes(group=id),color='gray')+
      xlab('Weeks')+
      ylab('Cognition: T-Score')+
      facet_grid(.~group)

  dev.off()

  #tested that t.test does what its supposed
  w2<-reshape(cogdf[which(cogdf$group==1 & cogdf$time!=5),], direction='wide')
  t.test(w2$cog.0,w2$cog.2, paired=T)
  range(w2$cog.2-w2$cog.0, na.rm=T)
  mean(w2$cog.0,na.rm=T)
  mean(w2$cog.2,na.rm=T)

  ot<-merge(w2,cr,by='id')
  cor.test(ot$cog.2-ot$cog.0,ot$cr)

  w2<-reshape(cogdf[which(cogdf$group==1 & cogdf$time!=2),], direction='wide')
  t.test(w2$cog.0,w2$cog.5, paired=T)
  w2$cog.2-w2$cog.0
  range(w2$cog.5-w2$cog.0,na.rm=T)
  mean(w2$cog.5,na.rm=T)
  ot<-merge(w2,cr,by='id')
  cor.test(ot$cog.5-ot$cog.0,ot$cr)

  icc(cbind(w2$cog.0,w2$cog.2))

  w3<-reshape(cogdf[which(cogdf$group==2 & cogdf$time!=5),], direction='wide')
  icc(cbind(w3$cog.8,w3$cog.0))
  #w2$cog.2-w2$cog.0
  range(w3$cog.8-w3$cog.0,na.rm=T)
  t.test(w3$cog.8,w3$cog.0,paired=T)
  mean(w3$cog.8,na.rm=T)-mean(w3$cog.0,na.rm=T)


  w4<-reshape(cogdf[which(cogdf$group==1 & cogdf$time!=6),], direction='wide')

  cor.test(w4$cog.2-w4$cog.0,w4$cog.5-w4$cog.0)
  plot(w4$cog.2-w4$cog.0,w4$cog.5-w4$cog.0)
  cor.test(w4$cog.2,w4$cog.5)

  cor.test(w4$cog.0,w4$cog.5)

  t.test(cog~time, data=cogdf[which(cogdf$group==1 & cogdf$time!=5),], paired=TRUE)
  pp<-aggregate(group~id,FUN=sum,data=cogdf[which(cogdf$group==1 & cogdf$time!=2),])
  pair.id<-pp$id[which(pp$group==2)]
  t.test(cog~time, data=cogdf[which(cogdf$group==1 & cogdf$time!=2 & cogdf$id%in%pair.id),], paired=TRUE)

  pp<-aggregate(group~id,FUN=sum,data=cogdf[which(cogdf$group==2 & !is.na(cogdf$cog)),])
  pair.id<-pp$id[which(pp$group==4)]

  t.test(cog~time, data=cogdf[which(cogdf$group==2 & cogdf$id%in%pair.id),], paired=TRUE)

                                          #subdomain

  tt<-IPER.COG[which(IPER.COG$time!=12),]
  for (i in 1:6)
      {
          mt<-t.test(tt[,(i+3)]~tt$time, IPER.COG[which(IPER.COG$time!=12),c(2,3,i+3)],paired=TRUE)
          print(mt)
  }
  #delayed memory p=0.0008 decrease, that is consistent with previous findings. 


  #severe psychosis in 5bccbeae70a6e883b8a797fc15333fd9, no cognitive
  #one subdomain is missing in 708b2af7eb8d57869a68c0fac5c7dc64, we imputed the total score

  tt<-SGA.COG[which(!SGA.COG$grid%in%c('0576953b90a5f627bd7f8af9a979dd33','e35f2445760d79b19bf9c59e2071b40e')),]
  for (i in 1:8)
      {
          mt<-t.test(tt[,(i+2)]~tt$time, tt[,c(1,2,i+2)],paired=TRUE)
          print(mt)
  }
  #no subdomain differences

  ## checkin in HC

  hcog8<-read.csv('./Data/HealthyControls_cog.csv')

  png('./Figures/Healthy_0_8_cognition.png')

  ggplot(hcog8, aes(x=factor(ExamType), y=Overall_TScore))+
      geom_boxplot()+
      geom_point()+
      geom_line(aes(group=grid))+
      xlab('Weeks')+
      ylab('Cognition: T-Score')

  dev.off()

  hcog.long<- data.frame(hcog8$grid, hcog8$ExamType, hcog8$Overall_TScore,hcog8$sex, hcog8$AgeAtNP)
  colnames(hcog.long)<-c('grid','time','score','sex','age')
  hcog.wide<-reshape(hcog.long,idvar='grid', timevar='time',direction='wide')

  ind4<-which(!is.na(rowMeans(cbind(hcog.wide$score.0,hcog.wide$score.8))))
  t.test(hcog.wide$score.8[ind4],hcog.wide$score.0[ind4],paired=T)
  range(hcog.wide$score.8[ind4]-hcog.wide$score.0[ind4])
  hist(hcog.wide$score.8[ind4]-hcog.wide$score.0[ind4])
  cor.test(hcog.wide$score.8[ind4],hcog.wide$score.0[ind4], method='spearman')

  mean(hcog.wide$age.0)
  sd(hcog.wide$age.0)

  length(which(hcog.wide$sex.0==1))
  length(which(hcog.wide$sex.0==2))
  dim(hcog.wide)
                                          #unique(SGA.COG$grid)
  library(irr)
  icc(cbind(hcog.wide$score.8[ind4],hcog.wide$score.0[ind4]))
  hcog.long$group<-1
  hcog.long<-unique(hcog.long)[,c(1,2,3,6)]


  beteg<-cogdf[which(cogdf$group==2),]
  colnames(hcog.long)<-colnames(beteg)

  aggregate(group~id, FUN=sum,unique(hcog.long[which(hcog.long$group==1),]))

  w8<-rbind(hcog.long,beteg)

  #testing for interaction: no interaction

  lm.1<-aov(cog~factor(time)*factor(group)+Error(id),data=w8)
  #lm.1<-aov(cog~time*group,data=w8)

  summary(lm.1)


  library(lme4)

  lmeModel = lmer(cog ~ factor(group)*factor(time) + (1+time|id), data=w8,REML=FALSE)
  lmeModel2 = lmer(cog ~ factor(group)+factor(time) + (1+time|id), data=w8,REML=FALSE)
  anova(lmeModel,lmeModel2)


#+END_SRC
** Figures-Volume
#+BEGIN_SRC R

  #### IPER VOL HAM-D
  library(ggplot2)
  voliper <- read.csv('/nethome/amiklos/argyelan@gmail.com/howto/GitHub/Publications/VOLUMEvsCognition/Data/VOL_IPER.csv')
  voliper <- read.csv('./Data/VOL_IPER.csv')

  iper.hamd.df.s<-iper.hamd.df[which(iper.hamd.df$time==2),]
  voliper.hamd <- merge(iper.hamd.df.s, voliper,by='id')
  cclin<-cor(voliper.hamd$cr,voliper.hamd[,12:dim(voliper.hamd)[2]])
  as.numeric(cclin)
  #temp2 <-read.csv('/nethome/amiklos/argyelan@gmail.com/projects/ECT/IPER/2020JUL/Data/IPER_results_dcogav.csv')
  #temp <- temp2[1:(dim(temp2)[1]-3),]
  #temp$HAMD<-t(cclin)[6:48]
  #write.csv(temp[,c(dim(temp)[2],2:(dim(temp)[2]-1))], '/nethome/amiklos/argyelan@gmail.com/projects/ECT/IPER/2020JUL/Data/IPER_results_HAMD_dcogav.csv')


                                          #FDR correction
  #p.adjust(temp2$pval, method ='fdr')
                                          #amygdala and hippocampus
  # transform data from standard score to T-score
  voliper$dcog<-round(qnorm(pnorm(voliper$mem.5, mean=100, sd=15), mean=50,sd=10))-round(qnorm(pnorm(voliper$mem.1, mean=100, sd=15), mean=50,sd=10))
  voliper$dcog12<-round(qnorm(pnorm(voliper$mem.12, mean=100, sd=15), mean=50,sd=10))-round(qnorm(pnorm(voliper$mem.1, mean=100, sd=15), mean=50,sd=10))
  voliper$dcogav<-rowMeans(cbind(voliper$dcog,voliper$dcog12),na.rm=TRUE)


  voliper.p<-voliper
  voliper.p$Hippocampus[which(voliper.p$grid==levels(voliper.p$grid)[1])]<-1.35 #this is just jittering for plotting, so that this two values not overlap on the figure
  voliper.p$Hippocampus[which(voliper.p$grid==levels(voliper.p$grid)[3])]<-1.15
  fav <- ggplot(voliper.p, aes(x=Hippocampus, y=dcogav))+
      stat_smooth(method = 'lm')+
      geom_point(aes(size=5     ),show.legend = FALSE)+
      xlab('Hippocampus volume change (%)')+
      ylab('Cognition change (RBANS TScore difference (5th and 12th ECT average versus baseline)')
  fav
  mean(voliper$Hippocampus)
  mean(voliper$ECTnum)
  sd(voliper$ECTnum)
  cor.test(voliper$Hippocampus, voliper$dcogav)

  f12 <- ggplot(voliper, aes(x=Hippocampus, y=dcog12))+
      stat_smooth(method = 'lm')+
      geom_point(aes(size=5     ),show.legend = FALSE)+
      xlab('Hippocampus volume change (%)')+
      ylab('Cognition change (RBANS TScore difference between 12th ECT vs baseline)')
  cor.test(voliper$Hippocampus, voliper$dcog12)

  f12

  f05 <- ggplot(voliper, aes(x=Hippocampus, y=dcog))+
      stat_smooth(method = 'lm')+
      geom_point(aes(size=5     ),show.legend = FALSE)+
      xlab('Hippocampus volume change (%)')+
      ylab('Cognition change (RBANS TScore difference between 5th ECT vs baseline)')
  f05
  cor.test(voliper$Hippocampus, voliper$dcog)

                                          #quick check if there is a cognition versus clinical

  cor.test(voliper.hamd$cr, voliper.hamd$mem.5-voliper.hamd$mem.1)
  cor.test(voliper.hamd$cr, voliper.hamd$mem.12-voliper.hamd$mem.1)


                                          #install.packages('gpubr')
  library(gridExtra)

  png('./Figures/IPER-VO-COG12-05.png')
  grid.arrange(f05,f12, ncol =2, nrow=1)
  dev.off()

  #### SGA VOL BPRS
  #volsga<-read.csv('/nethome/amiklos/argyelan@gmail.com/howto/GitHub/Publications/VOLUMEvsCognition/Data/VOL_SGA.csv')
  volsga<-read.csv('./Data/VOL_SGA.csv')
  volsga$grid
  unique(SGA.COG$grid)                                       #--> SGA.COG from Figures COG
  SGA.COG.long<-reshape(SGA.COG, idvar='grid', timevar='time', direction='wide')

  sga.fin<-merge(SGA.COG.long,volsga,by='grid')
  i<-which(sga.fin$grid=='e35f2445760d79b19bf9c59e2071b40e')
  sga.fin$Overall_TScore.0.1[i] <-mean(as.numeric(sga.fin[i,c(3,5,6,7,8,9)]))#imputing one missing variable from the others


  ind<-which(!is.na(sga.fin$Overall_TScore.0.1))
  png('./Figures/SGA-VO-COG08.png')
  f08<-ggplot(sga.fin[ind,], aes(x=Hippocampus, y=Overall_TScore.0.2 - Overall_TScore.0.1))+
      stat_smooth(method = 'lm')+
      geom_point(aes(size=5     ),show.legend = FALSE)+
      xlab('Hippocampus volume change (%)')+
      ylab('Cognition change (MATRICS TScore difference)')
  f08
  dev.off()
  pdf('./Figures/IPER-VOLALL-COG05--08.pdf')
  grid.arrange(f05,f12,f08, ncol =3, nrow=1)
  dev.off()
  cor.test(sga.fin$Overall_TScore.0.2-sga.fin$Overall_TScore.0.1, sga.fin$Hippocampus)
  #cor.test(sga.fin$Overall_TScore.0, sga.fin$Hippocampus)
                                          #transform Tscore to Standard Score
  #  sga.t$cog<-round(qnorm(pnorm(sga.t$cog, mean=50, sd=10), mean=100,sd=15))
  volsga.bprs <- merge(ps.cr, volsga,by='grid')
  cclin<-cor(volsga.bprs$cr,volsga.bprs[,7:(dim(volsga.bprs)[2]-8)])
  as.numeric(cclin)
                                          #CLINICAL and COGNITION is ORTHOGONAL
                                          #impute one individual - see text
  volsga.bprs$dcog8[which(volsga$grid=='e35f2445760d79b19bf9c59e2071b40e')]<-(6-21)
  cor.test(volsga.bprs$cr,volsga.bprs$dcog8)

  #volsga.bprs mean change
  colMeans(volsga.bprs[,7:(dim(volsga.bprs)[2]-8)])



                                          #Main figure
  ind<-which(!is.na(sga.fin$Overall_TScore.0.1))

  #jittering for plotting - three values overlap that needs to be jittered
  sga.fin.p<-sga.fin
  sga.fin.p$Hippocampus[which(sga.fin.p$grid==levels(sga.fin.p$grid)[14])]<-3.15
  sga.fin.p$Hippocampus[which(sga.fin.p$grid==levels(sga.fin.p$grid)[6])]<-3.85

  sga.t<-cbind(sga.fin.p$Overall_TScore.0.2[ind]-sga.fin.p$Overall_TScore.0.1[ind], sga.fin.p$Hippocampus[ind], 2, sga.fin.p$ECTnum[ind])
  ipe.t<-cbind(voliper.p$dcogav,voliper.p$Hippocampus,1,voliper.p$ECTnum)


  all<-data.frame(rbind(ipe.t,sga.t))
  colnames(all)<-c('cog','hip','grp','num')

  all2<-data.frame(rbind(cbind(sga.fin.p$Hippocampus, 2, sga.fin.p$ECTnum),cbind(voliper.p$Hippocampus,1,voliper.p$ECTnum)))
  colnames(all2)<-c('hip','grp','num')



  fent<-ggplot(all[which(all$grp==2),], aes(x=hip, y=cog))+
              stat_smooth(method='lm')+
      geom_point(size=5)+
      xlim(c(-2.5,7))+
      xlab('Hippocampus volume change (%)')+
      ylab('Cognition change (T-Score)')
  koze<-ggplot(all[which(all$grp==1),], aes(x=hip, y=cog))+
              stat_smooth(method='lm')+
      geom_point(size=5)+
      #xlim(c(-2.5,7))+
      xlab('Hippocampus volume change (%)')+
      ylab('Cognition change (T-Score)')
  lent<-ggplot(all2, aes(x=factor(grp), y=hip))+
      geom_boxplot()+
      geom_point(aes(size=num))+
  #    geom_point(aes(size=num), position=position_jitter())+
      labs(size='ECT numbers')+
      scale_size_continuous(breaks =  c(5,10,15,20,25),limits=c(5,25), labels = c('5','10','15','20','25'))+
      theme(legend.position='bottom')+
      coord_flip()+
      ylim(c(-2.5,6.5))+
      xlab('')+
      ylab('Hippocampus volume change (%)')+
      scale_x_discrete(labels=c('MDD','SCZ'))


  pdf('./Figures/Figure_03.pdf')
  grid.arrange( koze,fent, lent, layout_matrix=rbind(c(1,2),c(1,2),c(3,3)))
  dev.off()
  pdf('./Figures/SupplementaryFigure_04.pdf')
  grid.arrange(f05,f12,fent, ncol =3, nrow=1)
  dev.off()

  mean(all2$num[which(all2$grp==2)])
  sd(all2$num[which(all2$grp==2)])

  mean(all2$hip[which(all2$grp==2)])

  mean(all2$num[which(all2$grp==1)])
  sd(all2$num[which(all2$grp==1)])

  mean(all2$hip[which(all2$grp==1)])

  t.test(all2$hip[which(all2$grp==1)],all2$hip[which(all2$grp==2)])


#+END_SRC
** Figures-Volume-2
#+BEGIN_SRC R

  voliper #from above
  volsga  #from above

  volind.iper<-10:52
  volind.sga<-5:47
                                          #volind

  iperdbl<-voliper[,volind.iper]
  sgadbl<-volsga[,volind.sga]

  x<-cbind(as.numeric(colMeans(sgadbl)),volind,2)
  y<-cbind(as.numeric(colMeans(iperdbl)),volind,1)
           
  volchange<-data.frame(rbind(x,y))
  colnames(volchange)<-c('val','id','grp')

  a.av<-ggplot(volchange, aes(x=factor(grp), y=val))+
      geom_boxplot(fill=c('brown','tan3'))+
      geom_point()+
      geom_line(aes(group=id))+
      xlab('')+
      ylab('Average Volume Change (%)')+
      scale_x_discrete(labels=c('1'='MDD','2'='SCZ'))
  ,#+
  #    geom_text(aes(label=id))

  pdf('./Figures/Volume_change.pdf')
  a.av
  dev.off()


  t.test(y[1:42,1],x[1:42,1],paired=TRUE)


#+END_SRC
** Tables
#+BEGIN_SRC R
  #Install the relevant libraries - do this one time

  #install.packages("data.table")

  #install.packages("dplyr")

  #install.packages("formattable")

  #install.packages("tidyr")

  library(data.table)

  library(dplyr)

  library(formattable)

  library(tidyr)

  #Set a few color variables to make our table more visually appealing


  customGreen0 = "#DeF7E9"
  #customGreen0 = "#ffffff"

  customGreen = "#71CA97"


  customRed = "#ff7f7f"
  customGray ="#808080" 

  res <- read.csv('./Data/IPER_results_HAMD_dcogav.csv')
  res$FDR<-p.adjust(res$pval, method = 'fdr')

  resform <- res%>%mutate_at(colnames(res)[c(2:3,5:10)], function(x)round(x,digits=2))%>%mutate_at('pval', function(x)round(x, digits=5))%>%mutate_at('FDR', function(x)round(x, digits=4))

  improvement_formatter <- 
    formatter("span", 
              style = x ~ style(
                font.weight = "bold", 
                color = ifelse(x < -0.52, "gray", ifelse(x < -0.51, customRed, "gray"))))

  myformatfunc<-formatter("span",
                       style = ~ style(color = ifelse(`totalRBANS`<=(-0.51) & `pval`<0.002,"black",customGray)))

  myformatfunc2 <-formatter("span",
                       style = ~ style(color = ifelse(`totalRBANS`<=(-0.51) & `pval`<0.002,"black",customGray)),
            x ~ icontext(ifelse(x == "Hippocampus", "star", ""), x))

  FT<-formattable(resform[,2:12], align =c("l","c","c","c","c","c", "c", "c", "r"), list(
    `roi` = myformatfunc2,
    `totalRBANS` =  myformatfunc,
    `HAMD` = formatter("span",style = ~ style(color="grey")),
    area(col = c(d), row=which(resform$d>0)) ~ color_bar("pink"), 
  #  area(col = c(1,3:7)) ~ function(x) round(x,digits = 2),
    #`tval`= color_tile(customGreen0, customGreen),
    area(col =c(pval), row=which(resform$pval<0.002)) ~ color_tile(customGreen, customGreen0)
    #`totalRBANS` = improvement_formatter
    #`Improvement` = improvement_formatter
    ))

  FT

  html_header="
  <head> 
  <meta charset=\"utf-8\"> 
  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> 
  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">
  </head>
  <body>
  "

  write(paste(html_header, FT, sep=""), "./Tables/dcogavRES.html")

  #install.packages('htmltools')
  #install.packages('webshot')
  library(htmltools)
  library(webshot)
                                          #webshot::install_phantomjs()

  export_formattable <- function(f, file, width = "300mm", height = NULL, 
                                 background = "white", delay = 0.2)
      {
        w <- as.htmlwidget(f, width = width, height = height)
        path <- html_print(w, background = background, viewer = NULL)
        url <- paste0("file:///", gsub("\\\\", "/", normalizePath(path)))
        webshot(url,
                file = file,
                selector = ".formattable_widget",
                delay = delay)
      }

  export_formattable(FT, "./Tables/dcogavRES.png")


  #####SGAECT###

  res <- read.csv('./Data/SGA_results_BPRS_dcog08.csv')
  cbind(res$pval, p.adjust(res$pval, method = 'fdr'))
  res$FDR<-p.adjust(res$pval, method = 'fdr')
  colnames(res)[3]<-'totalMATRICS'
  resform <- res[1:(dim(res)[1]),]%>%mutate_at(colnames(res)[c(2,3,5:12)], function(x)round(x,digits=2))%>%mutate_at('pval', function(x)round(x, digits=5))%>%mutate_at('FDR', function(x)round(x, digits=4))

  improvement_formatter <- 
    formatter("span", 
              style = x ~ style(
                font.weight = "bold", 
                color = ifelse(x < -0.56, "gray", ifelse(x < -0.55, customRed, "gray"))))

  myformatfunc<-formatter("span",
                       style = ~ style(color = ifelse(`totalMATRICS`<(-0.55) & `pval`<0.002,"black",customGray)))

  myformatfunc2 <-formatter("span",
                       style = ~ style(color = ifelse(`totalMATRICS`<(-0.55) & `pval`<0.002,"black",customGray)),
            x ~ icontext(ifelse(x == "Hippocampus", "star", ""), x))

  FT<-formattable(resform[,2:14], align =c("l","c","c","c","c","c", "c", "c","c", "c", "r"), list(
    `roi` = myformatfunc2,
    `totalMATRICS` =  myformatfunc,
    #`BPRS` = formatter("span",style = ~ style(color="grey")),
    `BPRS` = myformatfunc,
    area(col = c(d), row=which(resform$d>0)) ~ color_bar("pink"), 
  #  area(col = c(1,3:7)) ~ function(x) round(x,digits = 2),
    #`tval`= color_tile(customGreen0, customGreen),
    area(col =c(pval), row=which(resform$pval<0.02)) ~ color_tile(customGreen, customGreen0)
    #`totalRBANS` = improvement_formatter
    #`Improvement` = improvement_formatter
    ))

  FT

  html_header="
  <head> 
  <meta charset=\"utf-8\"> 
  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> 
  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">
  </head>
  <body>
  "

  write(paste(html_header, FT, sep=""), "./Tables/SGAdcog08RES.html")

  #install.packages('htmltools')
  #install.packages('webshot')
  library(htmltools)
  #install.packages('webshot', , dependencies=TRUE, repos='http://cran.rstudio.com/')
  library(webshot)
                                          #webshot::install_phantomjs()

  export_formattable <- function(f, file, width = "300mm", height = NULL, 
                                 background = "white", delay = 0.2)
      {
        w <- as.htmlwidget(f, width = width, height = height)
        path <- html_print(w, background = background, viewer = NULL)
        url <- paste0("file:///", gsub("\\\\", "/", normalizePath(path)))
        webshot(url,
                file = file,
                selector = ".formattable_widget",
                delay = delay)
      }

  export_formattable(FT, "./Tables/SGAdcog08RES.png")

#+END_SRC
